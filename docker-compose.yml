version: '3.8'
services:
  db:
    image: postgres:12
    environment:
      POSTGRES_DB: dbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  web:
    build:
      context: ./web
    ports:
      - "1488:5000"
    environment:
      - FLASK_ENV=development
    depends_on:
      - db
    volumes:
      - ./web:/app
      - shared_history:/root/history
      - shared_chats:/root/shared_chats

  nginx:
    image: nginx:latest
    volumes:
      - shared_chats:/usr/share/nginx/html
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./web/static/style.css:/usr/share/nginx/html/static/style.css
    ports:
      - "8090:80"
  
  tg_history_dumper:
    build:
      context: ./tg_history_dumper
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ./data:/root/data
      - shared_history:/root/history # Сюда будут сохраняться данные из dumper
#  dumper_emulator:
#    build:
#      context: ./dumper_emulator  # Указываем путь к папке с Dockerfile вашего эмулятора
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"  # Устанавливаем маппинг портов для WebSocket
#    volumes:
#     - ./data:/root/data  # Сюда будут сохраняться данные
#     - shared_history:/root/history
  ollama:
      build:
        context: ./ollama
        dockerfile: Dockerfile
      image: ollama/ollama
      ports:
        - "11434:11434"
      volumes:
        - ollama_data:/root/.ollama
      restart: unless-stopped

volumes:
  postgres_data:
  shared_history:
  ollama_data:
  shared_chats:
